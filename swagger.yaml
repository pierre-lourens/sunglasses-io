# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: "2.0"
info:
  title: Sunglasses.io
  description: Purchase sunglasses with this great app
  version: "1.0.0"
# the domain of the service
host: localhost:3001
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api
produces:
  - application/json
paths:
  /brands:
    get:
      tags:
        - Brands
      summary: Brands Available
      description: |
        The brands endpoint returns a list of brands offered by the sunglasses.io store. The response includes the brand and its unique identifier.
      responses:
        "200":
          description: An array of brand objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Brands"
        "500":
          description: "Server-side error."
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /products:
    get:
      tags:
        - Products
      summary: Products in Store
      description: |
        The products endpoint returns a list of products offered by the sunglasses.io store. The response includes each product object. If a query is passed, it only includes those products whose description or name includes the query term.
      parameters:
        - name: search
          in: query
          description: Value that is used for filter of products
          required: false
          type: string
      responses:
        "200":
          description: An array of product objects (all of them or filtered by a query term)
          schema:
            type: array
            items:
              $ref: "#/definitions/Products"
        "500":
          description: "Server-side error."
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
definitions:
  Brands:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific brand.
        name:
          type: string
          description: The name of the brand.
  Products:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the product.
        categoryId:
          type: string
          description: The category the product belongs to.
        name:
          type: string
          description: The name of the product.
        descripiton:
          type: string
          description: The product description.
        price:
          type: number
          description: The price of the object
        imageUrls:
          type: array
          items:
            type: string
            description: a url to an image for the product
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
